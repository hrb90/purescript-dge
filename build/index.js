// Generated by psc-bundle 0.11.6
var PS = {};
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Category = PS["Control.Category"];
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  exports["const"] = $$const;
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
    "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  exports["unit"] = $foreign.unit;
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];        
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["void"] = $$void;
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];        
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  };                      
  var apply = function (dict) {
      return dict.apply;
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["liftA1"] = liftA1;
  exports["pure"] = pure;
})(PS["Control.Applicative"] = PS["Control.Applicative"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  };                     
  var bind = function (dict) {
      return dict.bind;
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (v) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (v1) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(v(v1));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS["Control.Monad"] = PS["Control.Monad"] || {});
(function(exports) {
    "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var monadEff = new Control_Monad.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Control_Bind.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Control_Apply.Apply(function () {
      return functorEff;
  }, Control_Monad.ap(monadEff));
  var applicativeEff = new Control_Applicative.Applicative(function () {
      return applyEff;
  }, $foreign.pureE);
  var functorEff = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
    "use strict";

  exports.log = function (s) {
    return function () {
      console.log(s);
      return {};
    };
  };
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  exports["log"] = $foreign.log;
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.unsafeForeignProcedure = function(args) {
      return function (stmt) {
          return Function(wrap(args.slice()))();
          function wrap() {
              return !args.length ? stmt : 'return function (' + args.shift() + ') { ' + wrap() + ' };';
          }
      };
  };
})(PS["Data.Foreign.EasyFFI"] = PS["Data.Foreign.EasyFFI"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Foreign.EasyFFI"];
  var Data_Function = PS["Data.Function"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Prelude = PS["Prelude"];        
  var unsafeForeignFunction = function (args) {
      return function (expr) {
          return $foreign.unsafeForeignProcedure(args)("return " + (expr + ";"));
      };
  };
  exports["unsafeForeignFunction"] = unsafeForeignFunction;
})(PS["Data.Foreign.EasyFFI"] = PS["Data.Foreign.EasyFFI"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Graphics_D3_Base = PS["Graphics.D3.Base"];        
  var GraphLayout = function (links, nodes, size) {
      this.links = links;
      this.nodes = nodes;
      this.size = size;
  };
  var size = function (dict) {
      return dict.size;
  };
  var nodes = function (dict) {
      return dict.nodes;
  };
  var links = function (dict) {
      return dict.links;
  };
  exports["GraphLayout"] = GraphLayout;
  exports["links"] = links;
  exports["nodes"] = nodes;
  exports["size"] = size;
})(PS["Graphics.D3.Layout.Base"] = PS["Graphics.D3.Layout.Base"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Graphics.D3.Layout.Force

  exports.forceLayout = d3.layout.force;
})(PS["Graphics.D3.Layout.Force"] = PS["Graphics.D3.Layout.Force"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_EasyFFI = PS["Data.Foreign.EasyFFI"];
  var Graphics_D3_Base = PS["Graphics.D3.Base"];
  var Prelude = PS["Prelude"];        
  var AttrValue = {};
  var Appendable = function (append) {
      this.append = append;
  };
  var Existing = function (attr, attr$prime, attr$prime$prime, remove, style, style$prime, style$prime$prime, text, text$prime, text$prime$prime) {
      this.attr = attr;
      this["attr'"] = attr$prime;
      this["attr''"] = attr$prime$prime;
      this.remove = remove;
      this.style = style;
      this["style'"] = style$prime;
      this["style''"] = style$prime$prime;
      this.text = text;
      this["text'"] = text$prime;
      this["text''"] = text$prime$prime;
  };
  var Clickable = function (onClick, onDoubleClick) {
      this.onClick = onClick;
      this.onDoubleClick = onDoubleClick;
  };
  var text$prime$prime = function (dict) {
      return dict["text''"];
  };
  var text$prime = function (dict) {
      return dict["text'"];
  };
  var text = function (dict) {
      return dict.text;
  };
  var style$prime$prime = function (dict) {
      return dict["style''"];
  };
  var style$prime = function (dict) {
      return dict["style'"];
  };
  var style = function (dict) {
      return dict.style;
  };
  var remove = function (dict) {
      return dict.remove;
  };
  var onDoubleClick = function (dict) {
      return dict.onDoubleClick;
  };
  var onClick = function (dict) {
      return dict.onClick;
  };
  var ffi = Data_Foreign_EasyFFI.unsafeForeignFunction;
  var rootSelect = ffi([ "selector", "" ])("d3.select(selector)");                
  var selectAll = ffi([ "selector", "selection", "" ])("selection.selectAll(selector)");
  var unsafeAppend = ffi([ "tag", "selection", "" ])("selection.append(tag)");
  var unsafeAttr = function (dictAttrValue) {
      return ffi([ "key", "val", "selection", "" ])("selection.attr(key, val)");
  };
  var unsafeAttr$prime = function (dictAttrValue) {
      return ffi([ "key", "val", "selection", "" ])("selection.attr(key, val)");
  };
  var unsafeAttr$prime$prime = function (dictAttrValue) {
      return ffi([ "key", "val", "selection", "" ])("selection.attr(key, function (d, i) { return val(d)(i); })");
  };
  var unsafeRemove = ffi([ "selection", "" ])("selection.remove()");
  var unsafeStyle = ffi([ "key", "val", "selection", "" ])("selection.style(key, val)");
  var unsafeStyle$prime = ffi([ "key", "val", "selection", "" ])("selection.style(key, val)");
  var unsafeStyle$prime$prime = ffi([ "key", "val", "selection", "" ])("selection.style(key, function (d, i) { return val(d)(i); })");
  var unsafeText = ffi([ "text", "selection", "" ])("selection.text(text)");
  var unsafeText$prime = ffi([ "text", "selection", "" ])("selection.text(text)");
  var unsafeText$prime$prime = ffi([ "text", "selection", "" ])("selection.text(function (d, i) { return text(d)(i); })");        
  var existingSelection = new Existing(function (dictAttrValue) {
      return unsafeAttr(dictAttrValue);
  }, function (dictAttrValue) {
      return unsafeAttr$prime(dictAttrValue);
  }, function (dictAttrValue) {
      return unsafeAttr$prime$prime(dictAttrValue);
  }, unsafeRemove, unsafeStyle, unsafeStyle$prime, unsafeStyle$prime$prime, unsafeText, unsafeText$prime, unsafeText$prime$prime);
  var enter = ffi([ "update", "" ])("update.enter()");                      
  var clickableSelection = new Clickable(ffi([ "callback", "clickable", "" ])("clickable.on('click', function(data) { callback(data)(); })"), ffi([ "callback", "clickable", "" ])("clickable.on('dblclick', function (data) { callback(data)(); })"));
  var bindData = ffi([ "array", "selection", "" ])("selection.data(array)");
  var attrValString = AttrValue;
  var attrValNumber = AttrValue;
  var attr$prime$prime = function (dict) {
      return dict["attr''"];
  };
  var attr$prime = function (dict) {
      return dict["attr'"];
  };
  var attr = function (dict) {
      return dict.attr;
  };                                                  
  var appendableSelection = new Appendable(unsafeAppend);
  var appendableEnter = new Appendable(unsafeAppend);
  var append = function (dict) {
      return dict.append;
  };
  exports["Appendable"] = Appendable;
  exports["AttrValue"] = AttrValue;
  exports["Clickable"] = Clickable;
  exports["Existing"] = Existing;
  exports["append"] = append;
  exports["attr"] = attr;
  exports["attr'"] = attr$prime;
  exports["bindData"] = bindData;
  exports["enter"] = enter;
  exports["onClick"] = onClick;
  exports["onDoubleClick"] = onDoubleClick;
  exports["remove"] = remove;
  exports["rootSelect"] = rootSelect;
  exports["selectAll"] = selectAll;
  exports["style"] = style;
  exports["text"] = text;
  exports["attrValNumber"] = attrValNumber;
  exports["attrValString"] = attrValString;
  exports["appendableSelection"] = appendableSelection;
  exports["appendableEnter"] = appendableEnter;
  exports["existingSelection"] = existingSelection;
  exports["clickableSelection"] = clickableSelection;
})(PS["Graphics.D3.Selection"] = PS["Graphics.D3.Selection"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Graphics.D3.Layout.Force"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_EasyFFI = PS["Data.Foreign.EasyFFI"];
  var Graphics_D3_Base = PS["Graphics.D3.Base"];
  var Graphics_D3_Layout_Base = PS["Graphics.D3.Layout.Base"];
  var Graphics_D3_Selection = PS["Graphics.D3.Selection"];        
  var ffi = Data_Foreign_EasyFFI.unsafeForeignFunction;
  var forceGraphLayout = new Graphics_D3_Layout_Base.GraphLayout(ffi([ "links", "force", "" ])("force.links(links)"), ffi([ "nodes", "force", "" ])("force.nodes(nodes)"), function (dims) {
      return ffi([ "w", "h", "force", "" ])("force.size([w, h])")(dims.width)(dims.height);
  });                                                                     
  var linkDistance = ffi([ "distance", "force", "" ])("force.linkDistance(distance)");
  var onDragStart = ffi([ "callback", "force", "" ])("force.on('dragstart', callback)");
  var onTick = ffi([ "callback", "force", "" ])("force.on('tick', function (d) { return callback(d)(); })");
  var start = ffi([ "force", "" ])("force.start()");
  var drag = ffi([ "force", "" ])("force.drag()");
  var createDrag = ffi([ "obj", "callable", "" ])("callable.call(obj);");                 
  var charge = ffi([ "charge", "force", "" ])("force.charge(charge)");
  exports["charge"] = charge;
  exports["createDrag"] = createDrag;
  exports["drag"] = drag;
  exports["linkDistance"] = linkDistance;
  exports["onDragStart"] = onDragStart;
  exports["onTick"] = onTick;
  exports["start"] = start;
  exports["forceGraphLayout"] = forceGraphLayout;
  exports["forceLayout"] = $foreign.forceLayout;
})(PS["Graphics.D3.Layout.Force"] = PS["Graphics.D3.Layout.Force"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Data_Foreign_EasyFFI = PS["Data.Foreign.EasyFFI"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Ring = PS["Data.Ring"];
  var Graphics_D3_Base = PS["Graphics.D3.Base"];
  var Graphics_D3_Layout_Base = PS["Graphics.D3.Layout.Base"];
  var Graphics_D3_Layout_Force = PS["Graphics.D3.Layout.Force"];
  var Graphics_D3_Selection = PS["Graphics.D3.Selection"];
  var Graphics_D3_Util = PS["Graphics.D3.Util"];
  var Prelude = PS["Prelude"];        
  var dragStartHandler = Data_Foreign_EasyFFI.unsafeForeignFunction([ "d" ])("d3.select(this).classed('fixed', d.fixed = true);");
  var doubleClickHandler = Data_Foreign_EasyFFI.unsafeForeignFunction([ "d" ])("d3.select(this).classed('fixed', d.fixed = false);");
  var layoutData = function (graph) {
      return function __do() {
          var v = Control_Monad_Eff_Console.log("hapax")();
          var v1 = Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Graphics_D3_Layout_Force.forceLayout)(Graphics_D3_Layout_Base.size(Graphics_D3_Layout_Force.forceGraphLayout)({
              width: 960.0, 
              height: 500.0
          })))(Graphics_D3_Layout_Force.charge(-400.0)))(Graphics_D3_Layout_Force.linkDistance(40.0))();
          var v2 = Control_Bind.bind(Control_Monad_Eff.bindEff)(Graphics_D3_Layout_Force.drag(v1))(Graphics_D3_Layout_Force.onDragStart(dragStartHandler))();
          var v3 = Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Graphics_D3_Selection.rootSelect("body"))(Graphics_D3_Selection.append(Graphics_D3_Selection.appendableSelection)("svg")))(Graphics_D3_Selection.attr(Graphics_D3_Selection.existingSelection)(Graphics_D3_Selection.attrValNumber)("width")(960.0)))(Graphics_D3_Selection.attr(Graphics_D3_Selection.existingSelection)(Graphics_D3_Selection.attrValNumber)("height")(500.0))();
          var v4 = Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Graphics_D3_Layout_Base.nodes(Graphics_D3_Layout_Force.forceGraphLayout)(graph.nodes)(v1))(Graphics_D3_Layout_Base.links(Graphics_D3_Layout_Force.forceGraphLayout)(graph.links)))(Graphics_D3_Layout_Force.start)();
          var v5 = Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Graphics_D3_Selection.selectAll(".link")(v3))(Graphics_D3_Selection.bindData(graph.links)))(Graphics_D3_Selection.enter))(Graphics_D3_Selection.append(Graphics_D3_Selection.appendableEnter)("line")))(Graphics_D3_Selection.attr(Graphics_D3_Selection.existingSelection)(Graphics_D3_Selection.attrValString)("class")("link"))();
          var v6 = Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Graphics_D3_Selection.selectAll(".node")(v3))(Graphics_D3_Selection.bindData(graph.nodes)))(Graphics_D3_Selection.enter))(Graphics_D3_Selection.append(Graphics_D3_Selection.appendableEnter)("circle")))(Graphics_D3_Selection.attr(Graphics_D3_Selection.existingSelection)(Graphics_D3_Selection.attrValString)("class")("node")))(Graphics_D3_Selection.attr(Graphics_D3_Selection.existingSelection)(Graphics_D3_Selection.attrValNumber)("r")(12.0)))(Graphics_D3_Selection.onDoubleClick(Graphics_D3_Selection.clickableSelection)(doubleClickHandler)))(Graphics_D3_Layout_Force.createDrag(v2))();
          return Graphics_D3_Layout_Force.onTick(function (v7) {
              return function __do() {
                  var v8 = Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Graphics_D3_Selection["attr'"](Graphics_D3_Selection.existingSelection)(Graphics_D3_Selection.attrValNumber)("x1")(function (d) {
                      return d.source.x;
                  })(v5))(Graphics_D3_Selection["attr'"](Graphics_D3_Selection.existingSelection)(Graphics_D3_Selection.attrValNumber)("y1")(function (d) {
                      return d.source.y;
                  })))(Graphics_D3_Selection["attr'"](Graphics_D3_Selection.existingSelection)(Graphics_D3_Selection.attrValNumber)("x2")(function (d) {
                      return d.target.x;
                  })))(Graphics_D3_Selection["attr'"](Graphics_D3_Selection.existingSelection)(Graphics_D3_Selection.attrValNumber)("y2")(function (d) {
                      return d.target.y;
                  }))();
                  return Control_Bind.bind(Control_Monad_Eff.bindEff)(Graphics_D3_Selection["attr'"](Graphics_D3_Selection.existingSelection)(Graphics_D3_Selection.attrValNumber)("cx")(function (v9) {
                      return v9.x;
                  })(v6))(Graphics_D3_Selection["attr'"](Graphics_D3_Selection.existingSelection)(Graphics_D3_Selection.attrValNumber)("cy")(function (v9) {
                      return v9.y;
                  }))();
              };
          })(v1)();
      };
  };
  var main = (function () {
      var g = {
          x: 700.0, 
          y: 250.0
      };
      var f = {
          x: 600.0, 
          y: 300.0
      };
      var e = {
          x: 500.0, 
          y: 200.0
      };
      var d = {
          x: 400.0, 
          y: 350.0
      };
      var c = {
          x: 300.0, 
          y: 50.0
      };
      var b = {
          x: 200.0, 
          y: 150.0
      };
      var a = {
          x: 100.0, 
          y: 100.0
      };
      var graph = {
          nodes: [ a, b, c, d, e, f, g ], 
          links: [ {
              source: a, 
              target: b
          }, {
              source: b, 
              target: c
          }, {
              source: c, 
              target: d
          }, {
              source: c, 
              target: e
          }, {
              source: e, 
              target: f
          }, {
              source: f, 
              target: g
          }, {
              source: d, 
              target: g
          } ]
      };
      return Data_Functor["void"](Control_Monad_Eff.functorEff)(layoutData(graph));
  })();
  exports["doubleClickHandler"] = doubleClickHandler;
  exports["dragStartHandler"] = dragStartHandler;
  exports["layoutData"] = layoutData;
  exports["main"] = main;
})(PS["Main"] = PS["Main"] || {});
PS["Main"].main();
